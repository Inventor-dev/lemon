<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <inceptionYear>2018</inceptionYear>
    <groupId>xyz.lemone.lemon</groupId>
    <artifactId>lemon-all</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>
    
    <name>lemon ${project.version}</name>
    <description>Top Lemon project pom.xml file</description>
    
    <scm>
        <url>git@github.com:Inventor-dev/lemon.git</url>
        <connection>scm:git@github.com:Inventor-dev/lemon.git</connection>
        <developerConnection>scm:git@github.com:Inventor-dev/lemon.git</developerConnection>
        <tag>lemon-all-${revision}</tag>
    </scm>
    
    <!--开发者信息-->
    <developers>
        <developer>
            <id>Inventor-dev</id>
            <name>Inventor-dev</name>
            <url>https://github.com/orgs/Inventor-dev</url>
            <email>lemon_yp@hotmail.com</email>
        </developer>
    </developers>
    
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    
    <organization>
        <name>Inventor-dev</name>
        <url>https://github.com/Inventor-dev</url>
    </organization>
    
    <issueManagement>
        <system>github</system>
        <url>https://github.com/Inventor-dev/lemon/issues</url>
    </issueManagement>
    
    
    <properties>
        <revision>1.0.0-SNAPSHOT</revision>
        <java.version>17</java.version>
        <resource.delimiter>@</resource.delimiter>
        <!-- Compiler settings properties -->
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.release>${java.version}</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        
        <!-- Maven properties -->
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <!-- Exclude all generated code -->
        <sonar.jacoco.itReportPath>${project.basedir}/../test/target/jacoco-it.exec</sonar.jacoco.itReportPath>
        <sonar.exclusions>file:**/generated-sources/**,**/test/**</sonar.exclusions>
        <!-- plugin version -->
        <versions-maven-plugin.version>2.2</versions-maven-plugin.version>
        <dependency-mediator-maven-plugin.version>1.0.2</dependency-mediator-maven-plugin.version>
        <clirr-maven-plugin.version>2.7</clirr-maven-plugin.version>
        <maven-enforcer-plugin.version>1.4.1</maven-enforcer-plugin.version>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-javadoc-plugin.version>2.10.4</maven-javadoc-plugin.version>
        <maven-source-plugin.version>3.0.1</maven-source-plugin.version>
        <maven-pmd-plugin.version>3.20.0</maven-pmd-plugin.version>
        <apache-rat-plugin.version>0.15</apache-rat-plugin.version>
        <maven-resources-plugin.version>3.0.2</maven-resources-plugin.version>
        <coveralls-maven-plugin.version>4.3.0</coveralls-maven-plugin.version>
        <jacoco-maven-plugin.version>0.7.8</jacoco-maven-plugin.version>
        <maven-surefire-plugin.version>2.20</maven-surefire-plugin.version>
        <findbugs-maven-plugin.version>3.0.4</findbugs-maven-plugin.version>
        <sonar-maven-plugin.version>3.0.2</sonar-maven-plugin.version>
        <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
        <maven-failsafe-plugin.version>2.19.1</maven-failsafe-plugin.version>
        <maven-assembly-plugin.version>3.0.0</maven-assembly-plugin.version>
        <maven-checkstyle-plugin.version>3.1.2</maven-checkstyle-plugin.version>
        <maven-flatten-version>1.1.0</maven-flatten-version>
        <!-- dependency version related to plugin -->
        <extra-enforcer-rules.version>1.0-beta-4</extra-enforcer-rules.version>
        <p3c-pmd.version>2.1.1</p3c-pmd.version>
        
        <!-- dependency version -->
        <spring-boot-dependencies.version>3.1.1</spring-boot-dependencies.version>
        <fluent-mybatis.version>1.9.4</fluent-mybatis.version>
        <mybatis-spring.version>3.0.1</mybatis-spring.version>
        <google-guava.version>31.1-jre</google-guava.version>
    
    </properties>
    
    <!-- 子模块管理 -->
    <modules>
        <module>lemon-ui</module>
        <module>lemon-domain</module>
        <module>lemon-infrastructure</module>
        <module>lemon-application</module>
        <module>lemon-server</module>
    </modules>
    
    <!-- 管理依赖版本号,子项目不会默认依赖 -->
    <dependencyManagement>
        
        <dependencies>
            
            <!-- Internal libs -->
            
            <dependency>
                <groupId>xyz.lemone.lemon</groupId>
                <artifactId>lemon-domain</artifactId>
                <version>${revision}</version>
            </dependency>
            
            <dependency>
                <groupId>xyz.lemone.lemon</groupId>
                <artifactId>lemon-infrastructure</artifactId>
                <version>${revision}</version>
            </dependency>
            
            <dependency>
                <groupId>xyz.lemone.lemon</groupId>
                <artifactId>lemon-application</artifactId>
                <version>${revision}</version>
            </dependency>
            
            <!-- Third-party libs -->
            
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring.version}</version>
            </dependency>
            
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>${mybatis-spring.version}</version>
            </dependency>
            
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>3.5.10</version>
            </dependency>
            
            <dependency>
                <groupId>com.github.atool</groupId>
                <artifactId>fluent-mybatis</artifactId>
                <version>${fluent-mybatis.version}</version>
            </dependency>
            
            <dependency>
                <groupId>com.github.atool</groupId>
                <artifactId>fluent-mybatis-processor</artifactId>
                <version>${fluent-mybatis.version}</version>
                <scope>provided</scope>
            </dependency>
            
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${google-guava.version}</version>
            </dependency>
            
            <dependency>
                <!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        
        </dependencies>
    
    </dependencyManagement>
    
    <!-- == -->
    <!-- =========================================================Build plugins================================================ -->
    <!-- == -->
    <build>
        
        <!-- 插件配置 -->
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${versions-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>com.github.vongosling</groupId>
                <artifactId>dependency-mediator-maven-plugin</artifactId>
                <version>${dependency-mediator-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>clirr-maven-plugin</artifactId>
                <version>${clirr-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven-enforcer-plugin.version}</version>
                <executions>
                    <execution>
                        <id>enforce-ban-circular-dependencies</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <rules>
                        <banCircularDependencies/>
                    </rules>
                    <fail>true</fail>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>extra-enforcer-rules</artifactId>
                        <version>${extra-enforcer-rules.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <compilerVersion>${maven.compiler.source}</compilerVersion>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                </configuration>
            </plugin>
            
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-pmd-plugin</artifactId>-->
<!--                <version>${maven-pmd-plugin.version}</version>-->
<!--                <configuration>-->
<!--                    <rulesets>-->
<!--                        <ruleset>rulesets/java/ali-comment.xml</ruleset>-->
<!--                        <ruleset>rulesets/java/ali-concurrent.xml</ruleset>-->
<!--                        <ruleset>rulesets/java/ali-constant.xml</ruleset>-->
<!--                        <ruleset>rulesets/java/ali-exception.xml</ruleset>-->
<!--                        <ruleset>rulesets/java/ali-flowcontrol.xml</ruleset>-->
<!--                        <ruleset>rulesets/java/ali-naming.xml</ruleset>-->
<!--                        <ruleset>rulesets/java/ali-oop.xml</ruleset>-->
<!--                        <ruleset>rulesets/java/ali-orm.xml</ruleset>-->
<!--                        <ruleset>rulesets/java/ali-other.xml</ruleset>-->
<!--                        <ruleset>rulesets/java/ali-set.xml</ruleset>-->
<!--                    </rulesets>-->
<!--                    <printFailingErrors>true</printFailingErrors>-->
<!--                    <excludes>-->
<!--                        <exclude>**/generated-sources/**/*.java</exclude>-->
<!--                        <exclude>**/*OAuth2*.java</exclude>-->
<!--                    </excludes>-->
<!--                </configuration>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <goals>-->
<!--                            <goal>check</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--                <dependencies>-->
<!--                    <dependency>-->
<!--                        <groupId>com.alibaba.p3c</groupId>-->
<!--                        <artifactId>p3c-pmd</artifactId>-->
<!--                        <version>${p3c-pmd.version}</version>-->
<!--                    </dependency>-->
<!--                </dependencies>-->
<!--            </plugin>-->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-checkstyle-plugin</artifactId>-->
<!--                <version>${maven-checkstyle-plugin.version}</version>-->
<!--                <configuration>-->
<!--                    <configLocation>style/LemonCheckStyle.xml</configLocation>-->
<!--                    <includeTestSourceDirectory>true</includeTestSourceDirectory>-->
<!--                    <encoding>${project.build.sourceEncoding}</encoding>-->
<!--                    <consoleOutput>true</consoleOutput>-->
<!--                    <failsOnError>true</failsOnError>-->
<!--                    <resourceExcludes>**/generated-sources/**/*.java</resourceExcludes>-->
<!--                </configuration>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>validate</id>-->
<!--                        <phase>validate</phase>-->
<!--                        <goals>-->
<!--                            <goal>check</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
<!--pmd-->
            
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco.exec</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-prepare-agent-integration</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco-it.exec</destFile>
                            <propertyName>failsafeArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report-integration</id>
                        <goals>
                            <goal>report-integration</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <forkCount>1</forkCount>
                    <reuseForks>true</reuseForks>
                    <testFailureIgnore>true</testFailureIgnore>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${findbugs-maven-plugin.version}</version>
            </plugin>
            
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>${sonar-maven-plugin.version}</version>
            </plugin>
            
            <!--  flatten-maven-plugin   maven 版本占用符处理  -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${maven-flatten-version}</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                    <pomElements>
                        <dependencies>expand</dependencies>
                    </pomElements>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        
        <pluginManagement>
            
            <plugins>
                
                <!--  maven-javadoc-plugin -->
                <plugin>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                    <configuration>
                        <charset>${maven.compiler.source}</charset>
                    </configuration>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                
                <!--  maven-source-plugin  -->
                <plugin>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                
                <!--  maven-resources-plugin  -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <delimiters>
                            <delimiter>${resource.delimiter}</delimiter>
                        </delimiters>
                        <useDefaultDelimiters>false</useDefaultDelimiters>
                    </configuration>
                </plugin>
                
                <!--  maven-assembly-plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven-assembly-plugin.version}</version>
                </plugin>
                
                <plugin>
                    <groupId>org.graalvm.buildtools</groupId>
                    <artifactId>native-maven-plugin</artifactId>
                    <version>0.9.20</version>
                    <extensions>true</extensions>
                </plugin>
                
                <!--  spring-boot-maven-plugin -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot-dependencies.version}</version>
                    <executions>
                        <execution>
                            <id>repackage</id>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <!--suppress UnresolvedMavenProperty -->
                        <mainClass>${start-class}</mainClass>
                        <finalName>${project.artifactId}-boot</finalName>
                    </configuration>
                </plugin>
            
            </plugins>
        
        </pluginManagement>
    
    </build>
    
    <profiles>
        <profile>
            <id>native</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-maven-plugin</artifactId>
                            <version>${spring-boot-dependencies.version}</version>
                            <configuration>
                                <image>
                                    <builder>paketobuildpacks/builder:tiny</builder>
                                    <env>
                                        <BP_NATIVE_IMAGE>true</BP_NATIVE_IMAGE>
                                    </env>
                                </image>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>process-aot</id>
                                    <goals>
                                        <goal>process-aot</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.graalvm.buildtools</groupId>
                            <artifactId>native-maven-plugin</artifactId>
                            <version>0.9.23</version>
                            <configuration>
                                <classesDirectory>${project.build.outputDirectory}</classesDirectory>
                                <metadataRepository>
                                    <enabled>true</enabled>
                                </metadataRepository>
                                <requiredVersion>23.0</requiredVersion>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>add-reachability-metadata</id>
                                    <goals>
                                        <goal>add-reachability-metadata</goal>
                                    </goals>
                                </execution>
                                <execution>
                                    <id>build-native</id>
                                    <goals>
                                        <goal>compile-no-fork</goal>
                                    </goals>
                                    <phase>package</phase>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        
        <profile>
            <id>nativeTest</id>
            <dependencies>
                <dependency>
                    <groupId>org.junit.platform</groupId>
                    <artifactId>junit-platform-launcher</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>process-test-aot</id>
                                <goals>
                                    <goal>process-test-aot</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <configuration>
                            <classesDirectory>${project.build.outputDirectory}</classesDirectory>
                            <metadataRepository>
                                <enabled>true</enabled>
                            </metadataRepository>
                            <requiredVersion>22.3</requiredVersion>
                        </configuration>
                        <executions>
                            <execution>
                                <id>native-test</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>api-doc</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.shalousun</groupId>
                        <artifactId>smart-doc-maven-plugin</artifactId>
                        <version>2.6.5</version>
                        <configuration>
                            <!--Specify the configuration file used to generate the document-->
                            <configFile>${project.basedir}/src/main/resources/META-INF/doc/smart-doc.json</configFile>
                            <projectName>${project.artifactId}</projectName>
                            <includes>
                                <include>io.micrometer:micrometer-tracing</include>
                                <include>jakarta.servlet:jakarta.servlet-api</include>
                            </includes>
                        </configuration>
                        <executions>
                            <execution>
                                <!--Comment out phase if you don't need to start smart-doc when compiling-->
                                <phase>prepare-package</phase>
                                <goals>
                                    <!--smart-doc provides html, openapi, markdown, adoc and other goals-->
                                    <goal>openapi</goal>
                                </goals>
                            </execution>
                        </executions>
                    
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    
    <!--maven 仓库配置-->
    <repositories>
        <repository>
            <id>aliyun-repos</id>
            <name>aliyun Repository</name>
            <url>https://maven.aliyun.com/nexus/content/groups/public</url>
        </repository>
        <repository>
            <id>spring-milestone</id>
            <name>spring milestone</name>
            <url>https://repo.spring.io/milestone</url>
        </repository>
    </repositories>
    
    <!--maven 插件仓库-->
    <pluginRepositories>
        <pluginRepository>
            <id>aliyun-repos</id>
            <name>aliyun Repository</name>
            <url>https://maven.aliyun.com/nexus/content/groups/public</url>
        </pluginRepository>
        <pluginRepository>
            <id>spring-milestone</id>
            <name>spring milestone</name>
            <url>https://repo.spring.io/milestone</url>
        </pluginRepository>
    </pluginRepositories>


</project>
